[{"id":"454b855f-4c5e-598d-8eff-91371a596d30","fields":{"slug":"/sum-of-two-number/"},"excerpt":"两数之和 给定一个整数数组 nums 和一个目标值 target，请你在该数组中找出和为目标值的那 两个 整数，并返回他们的数组下标。 你可以假设每种输入只会对应一个答案。但是，你不能重复利用这个数组中同样的元素。 示例:\n给定 nums = [2, 7, 11, 1…","frontmatter":{"date":"2018-11-28T22:40:32.169Z","description":"给定一个整数数组 nums 和一个目标值 target，请你在该数组中找出和为目标值的那 两个 整数，并返回他们的数组下标。","tags":["算法","leetCode"],"title":"两数之和"}},{"id":"6d7bf47b-49c1-5332-b75c-d92b76c06b9f","fields":{"slug":"/react-diff/"},"excerpt":"当你使用React，在单一时间点你可以考虑render()函数作为创建React元素的树。在下一次状态或属性更新，render()函数将返回一个不同的React元素的树。React需要算出如何高效更新UI…","frontmatter":{"date":"2018-12-06T23:46:37.121Z","description":"","tags":null,"title":"React Diff 算法原理"}},{"id":"7074a15b-dab2-58ae-a922-d689d212e743","fields":{"slug":"/single-thread/"},"excerpt":"单线程模型 单线程模型指的是，JavaScript 只在一个线程上运行。也就是说，JavaScript 同时只能执行一个任务，其他任务都必须在后面排队等待。 注意，JavaScript 只在一个线程上运行，不代表 JavaScript…","frontmatter":{"date":"2018-12-17T22:12:03.284Z","description":"","tags":null,"title":"定时器运行机制"}},{"id":"c307b6a7-c443-5454-a3c9-c052f63e3b17","fields":{"slug":"/learn-vue/"},"excerpt":"变化侦测 首先，我们定义一个数据对象car： 接下来，我们使用Object.defineProperty()改写上面的例子： 通过Object.defineProperty()方法给car定义了一个price属性，并把这个属性的读和写分别使用get()和set…","frontmatter":{"date":"2020-04-13T14:46:37.121Z","description":"","tags":["vue"],"title":"vue源码学习--变化侦测"}},{"id":"7504e83f-474d-5aac-95c7-7212bbb758c7","fields":{"slug":"/axios-interceptor/"},"excerpt":"在 Axios 中拦截器是非常有用的一个功能，可以让我们实现请求前对 config 参数进行调整以及响应后的数据处理。\n由于可以添加多个请求或响应拦截器，所以很明显 Axios 的拦截器内部是一个数组，通过 use 方法进行添加拦截器，通过 eject…","frontmatter":{"date":"2020-06-01T06:53:33.508Z","description":"在 Axios 中拦截器是非常有用的一个功能，可以让我们实现请求前对 config 参数进行调整以及响应后的数据处理","tags":["axios"],"title":"Axios 中拦截器的实现"}},{"id":"d521b323-da89-5f25-b6be-db70e9a28458","fields":{"slug":"/http/"},"excerpt":"HTTP协议简介 1、HTTP协议是Hyper Text Transfer Protocol（超文本传输协议）的缩写,是用于从万维网（WWW:World Wide Web ）服务器传输超文本到本地浏览器的传送协议。 2、HTTP是一个基于TCP/IP通信协议来传递数据（HTML…","frontmatter":{"date":"2020-06-01T06:53:33.508Z","description":"","tags":null,"title":"HTTP 协议"}},{"id":"d9067b37-65af-5820-87ec-3e6b6c2eeae3","fields":{"slug":"/javaScript-types/"},"excerpt":"JavaScript 中有八种基本的数据类型（前七种为基本数据类型，也称为原始类型，而 object 为复杂数据类型）。 number 用于任何类型的数字：整数或浮点数，在 ±253 范围内的整数。 bigint 用于任意长度的整数。 string…","frontmatter":{"date":"2020-06-24T13:51:33.508Z","description":"JavaScript 中有八种基本的数据类型（译注：前七种为基本数据类型，也称为原始类型，而 object 为复杂数据类型）。","tags":null,"title":"javaScript 数据类型"}},{"id":"e08abafb-65ab-5efe-8845-29b18830dbe0","fields":{"slug":"/method-borrowing/"},"excerpt":"从对象中借用方法 一个function即便是定义在一个对象中，作为对象的一个“方法”，它也只不过是一个普通的函数而已，跟其他函数没有任何区别。在执行时仍然需要为this绑定一个具体的对象。 this并不指function对象本身，也不是指function…","frontmatter":{"date":"2020-08-10T01:44:05.833Z","description":"在JavaScript中，可以从其他对象借用方法来构建某些功能，而不必继承它们的所有属性和方法。就是我们从一个对象中获取一个方法，并在另一个对象的上下文中“调用”它","tags":null,"title":"javaScript 方法借用（method borrowing）"}},{"id":"df11174d-95aa-523a-b2a7-cea52a8af989","fields":{"slug":"/continuous-sequence/"},"excerpt":"求解连续数列 已知连续正整数数列{K}=K1,K2,K3…Ki的各个数相加之和为S，i=N (0<S<100000, 0<N<100000), 求此数列K。输入描述:\n输入包含两个参数，1)连续正整数数列和S，2)数列里数的个数N。 输出描述: 如果有解输出数列K…","frontmatter":{"date":"2020-08-12T05:56:22.292Z","description":"已知连续正整数数列{K}=K1,K2,K3...Ki的各个数相加之和为S","tags":["算法"],"title":"求解连续数列"}}]