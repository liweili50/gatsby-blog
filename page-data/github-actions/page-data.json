{"componentChunkName":"component---src-templates-blog-post-js","path":"/github-actions/","result":{"data":{"site":{"siteMetadata":{"title":"Gatsby Blog"}},"markdownRemark":{"id":"15ee774d-7650-56bb-8bde-b6d8042d9b07","excerpt":"最近重新鼓捣 Gatsby Blog，认真翻看它了文档，发现用markdown本地文件只是其中一种数据来源方式，它还支持CMS、数据库或者其他第三方数据。用markdown编写发布文章是通过处理成本地数据再利用GraphQL查询，然后利用Gatsby提供的hooks自定义UI…","html":"<p>最近重新鼓捣 Gatsby Blog，认真翻看它了文档，发现用markdown本地文件只是其中一种数据来源方式，它还支持CMS、数据库或者其他第三方数据。用markdown编写发布文章是通过处理成本地数据再利用GraphQL查询，然后利用Gatsby提供的hooks自定义UI组件，而我刚好也可以在这个过程里把处理好的数据完成备份。</p>\n<blockquote>\n<p>A core feature of Gatsby is its ability to load data from anywhere — CMSs, Markdown, other third-party systems, even spreadsheets. This allows teams to manage their content in nearly any backend they prefer.</p>\n</blockquote>\n<p>之前的数据备份是通过GitHub webhooks来做的，但是通过Github Api获取的数据有限而且麻烦。而且项目本身就要使用Github Actions在push事件触发后来构建项目并发布到Github Pages，所以想在构建的过程中读取项目里的数据然后发送到指定的接口。</p>\n<p>具体做法通过 gatsby-source-filesystem 来处理文件数据，构建时在gatsby-node.js里生成所需的json文件，然后读取json发送给服务器。</p>\n<h5>首先第一步是读取json数据，输出结果为 package.outputs.content</h5>\n<div class=\"gatsby-highlight\" data-language=\"yml\"><pre class=\"language-yml\"><code class=\"language-yml\">    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Read json file\n        <span class=\"token key atrule\">id</span><span class=\"token punctuation\">:</span> package\n        <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> juliangruber/read<span class=\"token punctuation\">-</span>file<span class=\"token punctuation\">-</span>action@v1\n        <span class=\"token key atrule\">with</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">path</span><span class=\"token punctuation\">:</span> ./public/gatsby<span class=\"token punctuation\">-</span>posts.json</code></pre></div>\n<h5>其次是获取此次数据变更的内容,得到的结果为file_changes.outputs:{files_modified,files_added,files_removed}</h5>\n<div class=\"gatsby-highlight\" data-language=\"yml\"><pre class=\"language-yml\"><code class=\"language-yml\">      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Get commit changes\n        <span class=\"token key atrule\">id</span><span class=\"token punctuation\">:</span> file_changes\n        <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> trilom/file<span class=\"token punctuation\">-</span>changes<span class=\"token punctuation\">-</span>action@v1.2.3\n        <span class=\"token key atrule\">with</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">githubRepo</span><span class=\"token punctuation\">:</span> liweili50/liweili50.github.io</code></pre></div>\n<h5>最终就是把数据发送到指定的服务器接口</h5>\n<div class=\"gatsby-highlight\" data-language=\"yml\"><pre class=\"language-yml\"><code class=\"language-yml\">      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Make a HTTP Request\n        <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> actionsflow/axios@v1\n        <span class=\"token key atrule\">with</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">url</span><span class=\"token punctuation\">:</span> $<span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> secrets.WEBHOOK_URL <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n          <span class=\"token key atrule\">method</span><span class=\"token punctuation\">:</span> POST\n          <span class=\"token key atrule\">body</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">|</span><span class=\"token scalar string\">\n            {\n              \"modified\":${{ steps.file_changes.outputs.files_modified }},\n              \"added\":${{ steps.file_changes.outputs.files_added}},\n              \"removed\":${{ steps.file_changes.outputs.files_removed}},\n              \"posts\":${{ steps.package.outputs.content }}\n            }</span></code></pre></div>\n<p>这样就完成了在每次提交markdown文件后就会把Gatsby生成的数据以及变更的文件内容发送到服务器，服务端就可以按需更新数据库。</p>\n<p>具体代码请移步：<a href=\"https://github.com/liweili50/liweili50.github.io/blob/master/.github/workflows/main.yml\">https://github.com/liweili50/liweili50.github.io/blob/master/.github/workflows/main.yml</a></p>","frontmatter":{"title":"Github Actions的使用","date":"September 10, 2021","description":"最近重新鼓捣 Gatsby Blog，翻看它了文档，发现了它支持多种数据来源。虽然我是采用markdown编写，处理成本地数据再利用GraphQL查询，这就利用了Gatsby提供的hooks，刚好在这里可以让我用来把数据提交到数据库。"}},"previous":{"fields":{"slug":"/axios-interceptor/"},"frontmatter":{"title":"Axios 中拦截器的实现"}},"next":null},"pageContext":{"id":"15ee774d-7650-56bb-8bde-b6d8042d9b07","previousPostId":"7504e83f-474d-5aac-95c7-7212bbb758c7","nextPostId":null}},"staticQueryHashes":["2841359383","3257411868"]}