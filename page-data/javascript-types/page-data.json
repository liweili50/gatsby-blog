{"componentChunkName":"component---src-templates-blog-post-js","path":"/javascript-types/","result":{"data":{"site":{"siteMetadata":{"title":"Gatsby Blog"}},"markdownRemark":{"id":"c041156b-d7c2-5904-92a8-aef45fcf83eb","excerpt":"JavaScript 中有八种基本的数据类型（前七种为基本数据类型，也称为原始类型，而 object 为复杂数据类型）。 number 用于任何类型的数字：整数或浮点数，在 ±253 范围内的整数。 bigint 用于任意长度的整数。 string…","html":"<h2>JavaScript 中有八种基本的数据类型（前七种为基本数据类型，也称为原始类型，而 object 为复杂数据类型）。</h2>\n<ul>\n<li>number 用于任何类型的数字：整数或浮点数，在 ±253 范围内的整数。</li>\n<li>bigint 用于任意长度的整数。</li>\n<li>string 用于字符串：一个字符串可以包含一个或多个字符，所以没有单独的单字符类型。</li>\n<li>boolean 用于 true 和 false。</li>\n<li>null 用于未知的值 —— 只有一个 null 值的独立类型。</li>\n<li>undefined 用于未定义的值 —— 只有一个 undefined 值的独立类型。</li>\n<li>symbol 用于唯一的标识符。</li>\n<li>object 用于更复杂的数据结构。</li>\n</ul>\n<p>我们可以通过 typeof 运算符查看存储在变量中的数据类型。</p>\n<p>两种形式：typeof x 或者 typeof(x)。\n以字符串的形式返回类型名称，例如 “string”</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">    <span class=\"token keyword\">typeof</span> <span class=\"token keyword\">undefined</span> <span class=\"token comment\">// \"undefined\"</span>\n\n    <span class=\"token keyword\">typeof</span> <span class=\"token number\">0</span> <span class=\"token comment\">// \"number\"</span>\n\n    <span class=\"token keyword\">typeof</span> <span class=\"token number\">10n</span> <span class=\"token comment\">// \"bigint\"</span>\n\n    <span class=\"token keyword\">typeof</span> <span class=\"token boolean\">true</span> <span class=\"token comment\">// \"boolean\"</span>\n\n    <span class=\"token keyword\">typeof</span> <span class=\"token string\">\"foo\"</span> <span class=\"token comment\">// \"string\"</span>\n\n    <span class=\"token keyword\">typeof</span> <span class=\"token function\">Symbol</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"id\"</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// \"symbol\"</span>\n\n    <span class=\"token keyword\">typeof</span> Math <span class=\"token comment\">// \"object\"  (1)</span>\n\n    <span class=\"token keyword\">typeof</span> <span class=\"token keyword\">null</span> <span class=\"token comment\">// \"object\"  (2)</span>\n\n    <span class=\"token keyword\">typeof</span> alert <span class=\"token comment\">// \"function\"  (3)</span></code></pre></div>\n<p>最后三行可能需要额外的说明：</p>\n<ol>\n<li>Math 是一个提供数学运算的内建 object。此处仅作为一个 object 的示例。</li>\n<li>typeof null 的结果是 “object”。这其实是不对的。官方也承认了这是 typeof 运算符的问题，现在只是为了兼容性而保留了下来。当然，null 不是一个 object。null 有自己的类型，它是一个特殊值。再次强调，这是 JavaScript 语言的一个错误。</li>\n<li>typeof alert 的结果是 “function”，因为 alert 在 JavaScript 语言中是一个函数。在 JavaScript 语言中没有一个特别的 “function” 类型。函数隶属于 object 类型。但是 typeof 会对函数区分对待。这不是很正确的做法，但在实际编程中非常方便。</li>\n</ol>","frontmatter":{"title":"javaScript 数据类型","date":"June 24, 2020","description":"JavaScript 中有八种基本的数据类型（译注：前七种为基本数据类型，也称为原始类型，而 object 为复杂数据类型）。"}},"previous":{"fields":{"slug":"/github-actions/"},"frontmatter":{"title":"Github Actions 使用"}},"next":{"fields":{"slug":"/method-borrowing/"},"frontmatter":{"title":"javaScript 方法借用（method borrowing）"}}},"pageContext":{"id":"c041156b-d7c2-5904-92a8-aef45fcf83eb","previousPostId":"15ee774d-7650-56bb-8bde-b6d8042d9b07","nextPostId":"e08abafb-65ab-5efe-8845-29b18830dbe0"}},"staticQueryHashes":["2841359383","3257411868"]}